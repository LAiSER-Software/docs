Module Description:
-------------------
A brief description of what this module does.

Ownership:
----------
Project: Leveraging Artificial intelligence for Skills Extraction and Research (LAiSER)
Owner:<br/>  George Washington University Insitute of Public Policy<br/>
        Program on Skills, Credentials and Workforce Policy<br/>
        Media and Public Affairs Building<br/>
        805 21st Street NW<br/>
        Washington, DC 20052<br/>
        PSCWP@gwu.edu<br/>
        https://gwipp.gwu.edu/program-skills-credentials-workforce-policy-pscwp<br/>

License:
--------
Copyright 2024 George Washington University Insitute of Public Policy

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files 
(the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, 
merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is 
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR 
IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


Input Requirements:
-------------------
- Input files or data formats required by the module.

Output/Return Format:
----------------------------
- Description of the output files or data formats produced by the module.



Revision History:
-----------------
| Rev No. | Date | Author | Description |
|---------|------|--------|-------------|
| [1.0.0] | 05/27/2024 | First L. | Initial Version - Code does something |
| [1.0.1] | 05/28/2024 | First L. | Some Changes were made in this version |


TODO:
-----
- 1: Brief description of what needs to be done.
- 2: Brief description of another task.

```python
    import numpy as np
    import pandas as pd



    class class_name():
        """
        Description of Class.

        ...

        Attributes
        ----------
        attribute1 : type
            Short description
        attribute2 : type
            Short description

        Parameters (optional from __init__ function)
        ----------
        param1 : type
            Short description
        param2 : type
            Short description
            Defaults to ''
            
        Methods
        -------
        function_name(param3, param4='default_value')
            Function Description and purpose

        ....

        """

        attribute1 = None
        attribute2 = None

        def __init__(self, param1, param2='default_value'):
            """
            Initialize class_name with given parameters.

            Parameters
            ----------
            param1 : type
                Short description of param1
            param2 : type, optional
                Short description of param2, by default 'default_value'
            """
            # Initialization of objects here
            self.attribute1 = param1
            self.attribute2 = param2

        def function_name(self, param3, param4='default_value'):
            """
            Function Description and purpose

            Parameters
            ----------
            param3 : type
                Some description of function parameter
            param4 : type, optional
                Some description of function parameter, by default 'default_value'

            Returns
            -------
            type
                Description of return value

            Examples (optional)
            --------
                Example usage of the function.

                >>> result = function_name(param3, param4)
                >>> assert result == expected_output

            Notes (optional)
            -----
                Any additional notes or remarks about the function.

            """
            # Function implementation here
            return None
```